[{"path":"https://araujomat.github.io/treesliceR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 treesliceR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-distribution.html","id":"pruning-the-passerines-phylogeny","dir":"Articles","previous_headings":"","what":"1. Pruning the passerines phylogeny","title":"Passerines Distribution","text":"conducting analysis, necessary load passerines’ phylogeny. invoke pass_trees object, accessible within treesliceR package. object comprises 100 passerine phylogenies, vignette use first one: evaluate species richness distribution older younger lineages, essential segregate lineages based specific criterion. Therefore, categorize lineages older species last branching events higher 75th quantile overall passerines age. can accomplished using prune_tips() function: Now, classify lineages younger ages smaller 25th quantile overall passerine ages. However, aim retain phylogeny species originating quantile threshold, set argument method = 2 (details, see ?prune_tips()): Let’s visualize original pruned phylogenies:","code":"tree <- pass_trees[[1]] older <- prune_tips(tree, 0.75, qtl = T) younger <- prune_tips(tree, 0.25, qtl = T, method = 2) par(mfrow = c(1, 3)) # Setting an 1x3 graphical display plot(older, main = \"All species\", show.tip.label = F); axisPhylo() plot(older, main = \"Older species\", show.tip.label = F); axisPhylo() plot(younger, main = \"Younger species\", show.tip.label = F); axisPhylo() par(mfrow = c(1, 1)) # Returning to 1x1"},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-distribution.html","id":"distribution-of-species-richness-older-vs-younger","dir":"Articles","previous_headings":"","what":"2. Distribution of species richness (older vs younger)","title":"Passerines Distribution","text":"calculating species richness distribution categories, need identify older younger species present pruned phylogenies: Now, need evaluate distribution species. , ’ll load passerines species matrix stored pass_mat object. Let’s take look first tree species matrix: , can create subsets matrix older younger species. Let’s begin older ones: Now, let’s proceed creating subsets younger species: Now, can load grid map Australia incorporate species richness information onto : , visualize species richness patterns categories:","code":"older <- older$tip.label younger <- younger$tip.label head(pass_mat[, 1:3]) #>   Heteromyias_albispecularis Myzomela_obscura Taeniopygia_guttata #> 1                          0                1                   0 #> 2                          0                1                   0 #> 3                          0                1                   0 #> 4                          0                1                   0 #> 5                          0                1                   0 #> 6                          0                1                   0 positions <- which(colnames(pass_mat) %in% older) old_mat <- pass_mat[, positions] positions <- which(colnames(pass_mat) %in% younger) yng_mat <- pass_mat[, positions] grid <- AU_grid grid$SR_old <- rowSums(old_mat) grid$SR_yng <- rowSums(yng_mat) # Younger AU_yng <- ggplot() +           geom_sf(data = grid, aes(fill = SR_yng)) +           scale_fill_gradient(low = \"white\", high = \"red\") +                     labs(fill = \"SR (Young)\") +           theme_void() # Older AU_old <- ggplot() +           geom_sf(data = grid, aes(fill = SR_old)) +           scale_fill_gradient(low = \"white\", high = \"red\") +           labs(fill = \"SR (Old)\") +           theme_void() # Plotting ggarrange(AU_yng, AU_old, labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1)"},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-distribution.html","id":"mismatches-in-species-richness-distribution","dir":"Articles","previous_headings":"","what":"3. Mismatches in species richness distribution","title":"Passerines Distribution","text":"observed , noticeable correspondence species richness younger older lineages. However, extent relationship uncertain. Let’s fit simple linear regression quantify relationship: Now, let’s examine summarized results: Note coefficient determination significantly higher (R² = 63%!!!!). Thus, areas high richness younger lineages generally also exhibit high richness older lineages. areas indicate different dynamics diversification rates time, concurrently influencing patterns species richness lineages different depths. However, let’s examine scatterplot depicting species richness categories:  Despite stronger relationship species richness , deviations patterns indicate important unidentified biogeographical processes influencing currently observed species richness lineages. Therefore, let’s capture deviations model using residuals function visualize Australia map:  Areas blue indicate higher predominance younger lineages expected, red older lineages predominate. Areas colored grey indicate observed species richness younger older species matches richness expected model. Using residuals, can attempt infer processes leading differences species richness older younger lineages. Interestingly, differences observed residuals highly structured space. one hand, higher predominance older lineages within deserts, attributed processes lower diversification rates within locations time. hand, younger lineages predominate humid areas islands, indicating locations diversification rates higher continually generate recent lineages. However, mechanisms mentioned remain realm hypothesis open empirical testing. ’s folks!","code":"model <- lm(SR_yng ~ SR_old, data = grid) summary(model) #>  #> Call: #> lm(formula = SR_yng ~ SR_old, data = grid) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -10.5402  -2.8631  -0.4006   2.6029  12.1718  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept) -1.16669    0.56283  -2.073   0.0385 *   #> SR_old       0.85690    0.02403  35.658   <2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 3.999 on 718 degrees of freedom #> Multiple R-squared:  0.6391, Adjusted R-squared:  0.6386  #> F-statistic:  1271 on 1 and 718 DF,  p-value: < 2.2e-16 plot(SR_yng ~ SR_old, data = grid,      ylab = \"Species richness (younger)\",      xlab = \"Species richness (older)\") # Regression line abline(model, col = \"red\") grid$res <- residuals(model) # Mapping it ggplot() +    geom_sf(data = grid, aes(fill = res)) +   scale_fill_gradient2(low = \"red\", mid = \"grey80\", high = \"blue\") +   labs(fill = \"Residuals\") +   theme_void()"},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-distribution.html","id":"related-research","dir":"Articles","previous_headings":"","what":"Related research","title":"Passerines Distribution","text":"Hawkins, B. ., Diniz‐Filho, J. . F., Jaramillo, C. , Soeller, S. . 2007. Climate, Niche Conservatism, Global Bird Diversity Gradient. - American Naturalist 170(S2): S16–S27. https://doi.org/10.1086/519009 Sonne, J., Dalsgaard, B., Borregaard, M. K., Kennedy, J., Fjeldså, J. Rahbek, C. 2022. Biodiversity cradles museums segregating within hotspots endemism. - Proceedings Royal Society: B. 289: 20221102. https://doi.org/10.1098/rspb.2022.1102","code":""},{"path":[]},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"first-framework-example","dir":"Articles","previous_headings":"1. Passerines study for a single phylogeny","what":"1.1. First framework example","title":"Passerines Diversification","text":"Herein, ’ll compare passerines tip diversification rates (DR) Australian aridification (~33 Mya). used passerines phylogenies subsets global birds phylogenies made available Jetz et al. (2012). Thus, primarily, can load passerines phylogeny available within package calling pass_trees object: Now, need split phylogeny two distinct portions, one representing last 33 millions years ago (Mya) another representing cladogenesis events period. capture root slice 33 Mya, can slice phylogeny tipwardly (.e., tips root) using squeeze_tips() function. Alternatively, phylogeny slice last 33 Mya can obtained squeeze_root() function, slices phylogeny rootwardly (.e, root tips). Since DR calculations dependent node’s path given tip, set argument dropNodes = TRUE functions remove “void nodes” (nodes zero branch length) avoid biases DR estimates: Let’s compare original phylogeny cut ones:  , need calculate DR separately phylogeny slice finding difference . calculate DR, can use DR() function available within treesliceR package: Now ’ll assign DR differences data frame inside tree object containing passerines information: calculate mean standard deviation differences per family, use tapply() function aggregate calculated DRs passerine families: visualize DR differences among families, ’ll create new data frame outputs: Now, can create graph similar one displayed Araujo et al. (review) using ggplot2 package:  Notice final output slightly different observed Araujo et al. (review). However, remember executed analysis single passerine phylogeny. comprehensive assessment using phylogenies carried sections (example section “2. Passerines study multiple phylogenies”).","code":"tree <- pass_trees[[1]] recent <- squeeze_root(tree = tree, time = 33, dropNodes = T) old <- squeeze_tips(tree = tree, time = 33, dropNodes = T) par(mfrow = c(1, 3)) # Setting an 1x3 graphical display plot(tree, main = \"Complete tree\", show.tip.label = F); axisPhylo() plot(old, main = \"Old tree\", show.tip.label = F); axisPhylo() plot(recent, main = \"Recent tree\", show.tip.label = F); axisPhylo() par(mfrow = c(1, 1)) # Returning to a simple 1x1 display DR_diff <- DR(tree = recent)[,2] - DR(tree = old)[,2] tree$Species_info$DR_diff <- DR_diff # tapply() for means fam_DR <- tapply(tree$Species_info$DR_diff, tree$Species_info$Family, mean) # tapply() for standard deviations fam_DR_sd <- tapply(tree$Species_info$DR_diff, tree$Species_info$Family, sd) # Creating the families DR data frame fam_df <- data.frame(Family = names(fam_DR), DR_diff = fam_DR, DR_sd = fam_DR_sd) # Sorting them based on DR's value fam_df <- fam_df[order(fam_df$DR_diff),] # Turning this order into a factor to plot it fam_df$Family <- factor(fam_df$Family, levels = fam_df$Family) ggplot(fam_df, aes(x = Family, y = DR_diff,                     ymin = DR_diff - DR_sd,                     ymax = DR_diff + DR_sd)) +   geom_pointrange(color = \"#d90429\") +   geom_hline(yintercept = 0, linetype=\"dashed\", color = \"black\") +   coord_flip() + theme_minimal() +    theme(axis.title = element_text(size = 13),         axis.text = element_text(size = 10),         axis.line = element_line(colour = \"black\"),         panel.grid.major.x = element_blank(),         panel.grid.minor.x = element_blank()) +   ylab(expression(paste(DR[\"recent\"]-DR[\"past\"]))) + xlab(NULL)"},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"second-framework-example","dir":"Articles","previous_headings":"1. Passerines study for a single phylogeny","what":"1.2. Second framework example","title":"Passerines Diversification","text":"Herein, ’ll calculate CpB-rate Australian passerines turnover nestedness components. Firstly, ’ll need load assemblages paired respective neighborhoods. assemblages stored within package intern object called pass_asb. object list presence-absences matrices, list contains given Australian focal cell respective neighboring cells. , let’s check header first matrix within list, focusing first four columns (species): can run sensitivity analysis find parsimonious number slices assess CpB-rate patterns. first, need create vector containing desired number slices assessment: Let’s run sensitivity analysis turnover nestedness components: , can visualize sensitivity analysis using CpR_sensitivity_plot function. use ggplot2 syntax add vertical line showing selected number slices run subsequent analysis:  Now, can finally calculate CpB-rates turnover nestedness components, case, multisite approach (PS: may take minutes): Finally, can plot CpB time map . map , ’ll use Australian grid map stored within package object AU_grid. Let’s plot patterns turnover component:  can nestedness component:","code":"head(pass_asb[[1]][, 1:4]) #>    Myzomela_obscura Dicaeum_hirundinaceum Hirundo_nigricans Artamus_personatus #> 6                 1                     1                 1                  1 #> 5                 1                     1                 1                  1 #> 7                 1                     1                 1                  1 #> 16                1                     1                 1                  1 #> 17                1                     1                 1                  1 #> 18                1                     1                 1                  1 vec <- c(250, 500, 750, 1000, 1250, 1500, 1750, 2000) sens_turn <- CpR_sensitivity(tree = tree, vec = vec, samp = 100,                              asb = pass_asb, rate = \"CpB\", comp = \"turnover\") sens_nest <- CpR_sensitivity(tree = tree, vec = vec, samp = 100,                              asb = pass_asb, rate = \"CpB\", comp = \"nestedness\") # Store each graph within a respective object turn_sens_plot <- CpR_sensitivity_plot(sens_turn, rate = \"CpB\", stc = \"mean\") +    geom_vline(xintercept = 1000, linetype=\"dashed\", color = \"black\") nest_sens_plot <- CpR_sensitivity_plot(sens_nest, rate = \"CpB\", stc = \"mean\") +    geom_vline(xintercept = 1000, linetype=\"dashed\", color = \"black\") # To plot them together ggarrange(turn_sens_plot, nest_sens_plot,                     labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1) # For turnover component turn <- CpB(tree = tree, n = 1000, asb = pass_asb, comp = \"turnover\") # For nestedness component nest <- CpB(tree = tree, n = 1000, asb = pass_asb, comp = \"nestedness\") turn_1 <- CpR_graph(data = turn, rate = \"CpB\", qtl = TRUE) turn_2 <- CpR_graph(data = turn, rate = \"CpB\", qtl = TRUE, map = AU_grid) # To plot them together ggarrange(turn_1, turn_2,                     labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1) nest1 <- CpR_graph(data = nest, rate = \"CpB\", qtl = TRUE) nest2 <- CpR_graph(data = nest, rate = \"CpB\", qtl = TRUE, map = AU_grid) # To plot them together ggarrange(nest1, nest2,                     labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1)"},{"path":[]},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"first-framework-example-1","dir":"Articles","previous_headings":"2. Passerines study for multiple phylogenies","what":"2.1. First framework example","title":"Passerines Diversification","text":"Herein, ’ll done previous section using multiple (100) phylogenies. ’ll use phylogenies control phylogenetic uncertainty present position inputted tips. Thus, let’s firstly cut 100 phylogenies compare tip-DR Australia aridification (~33Mya). can done easily list trees using lapply() function: way, can calculate species DR separately using function: DRs calculated, can capture mean values per species. However, since species positions generally different among phylogenies, ’ll need merge lists based species column: Now, can calculate mean standard deviation DRs per passerine species phylogeny time slice. , calculate mean differences done first workflow one phylogeny: , can merge DR differences data frame inside tree object containing passerine information, obtain information per passerine family using tapply() function: plotting, ’ll create new data frame containing DRs per family sort based highest DR values: Plotting !","code":"recent <- lapply(tree, function(x){return(squeeze_root(x, 33, dropNodes = T))}) old <- lapply(tree, function(x){return(squeeze_tips(x, 33, dropNodes = T))}) DR_rec <- lapply(recent, function(x){DR(x)}) DR_old <- lapply(old, function(x){DR(x)}) # Recent f_DRrec <- DR_rec[[1]] colnames(f_DRrec)[2] <- 1 # Old f_DRold <- DR_old[[1]] colnames(f_DRold)[2] <- 1  # Looping for (i in 2:length(DR_rec)) {   # Recent   f_DRrec <- merge(f_DRrec, DR_rec[[i]], by = \"Species\", sort = FALSE)   colnames(f_DRrec)[i + 1] <- i   # Old   f_DRold <- merge(f_DRold, DR_old[[i]], by = \"Species\", sort = FALSE)   colnames(f_DRold)[i + 1] <- i } # Recent DR_rec_mean <- apply(f_DRrec[, -1], 1, mean) DR_rec_sd <- apply(f_DRrec[, -1], 1, sd)  # Old DR_old_mean <- apply(f_DRold[, -1], 1, mean) DR_old_sd <- apply(f_DRold[, -1], 1, sd)  # Capturing their mean difference DR_diff <- DR_rec_mean - DR_old_mean df <- data.frame(Specie = f_DRrec[, 1], DR_diff = DR_diff) # Capturing families information df <- merge(df, tree[[1]]$Species_info, by = \"Specie\", sort = FALSE)  ## Displaying it graphically for families fam_DR <- tapply(df$DR_diff, df$Family, mean) fam_DR_sd <- tapply(df$DR_diff, df$Family, sd) fam_df <- data.frame(Family = names(fam_DR), DR_diff = fam_DR, DR_sd = fam_DR_sd) # Ordering to plot fam_df <- fam_df[order(fam_df$DR_diff),] fam_df$Family <- factor(fam_df$Family, levels = fam_df$Family) ggplot(fam_df, aes(x = Family, y = DR_diff,                     ymin = DR_diff - DR_sd,                     ymax = DR_diff + DR_sd)) +   geom_pointrange(color = \"#d90429\") +   geom_hline(yintercept = 0, linetype=\"dashed\", color = \"black\") +   coord_flip() + theme_minimal() +    theme(axis.title = element_text(size = 13),         axis.text = element_text(size = 10),         axis.line = element_line(colour = \"black\"),         panel.grid.major.x = element_blank(),         panel.grid.minor.x = element_blank()) +   ylab(expression(paste(DR[\"recent\"]-DR[\"past\"]))) + xlab(NULL)"},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"second-framework-example-1","dir":"Articles","previous_headings":"2. Passerines study for multiple phylogenies","what":"2.2. Second framework example","title":"Passerines Diversification","text":"already decided number slices previous sections (section “1.2.”), ’ll skip sensitivity analysis step calculate CpB-rates. Thus, ’ll calculate CpB-rate 100 phylogenies using previously defined criterion 1000 slices. First, ’ll run CpB-rate analysis turnover component. obtain CpB-rates faster 100 phylogenies, pay attention set CpB() function run parallel programming (using argument ncor). run , must confirm number cores set (5) supported machine. Anyway, following function can may take minutes finish, can run faster able set higher number cores: Now, capture can capture mean parameter outputted list CpB() outputs using sapply() function. ’ll store within new data frame containing format CpR_graph() able read (CpB() output): Plotting CpB outputs turnover component:  Now, ’ll nestedness component: Separating summarizing parameter: Plotting CpB outputs nestedness component:  ’s folks!","code":"CpB_turn <- lapply(pass_trees, function(x){   return(CpB(tree = x, n = 1000, asb = pass_asb, comp = \"turnover\", ncor = 5)) }) CpB_val <- sapply(CpB_turn, function(x){return(x[,1])}) pB_val <- sapply(CpB_turn, function(x){return(x[,2])}) pBO_val <- sapply(CpB_turn, function(x){return(x[,3])}) # Creating the new data frame turn_100trees <- data.frame(CpB = apply(CpB_val, 1, mean),                             pB = apply(pB_val, 1, mean),                             pBO = apply(pBO_val, 1, mean)) turn_1 <- CpR_graph(data = turn_100trees, rate = \"CpB\", qtl = TRUE) turn_2 <- CpR_graph(data = turn_100trees, rate = \"CpB\", qtl = TRUE, map = AU_grid) # To plot them together ggarrange(turn_1, turn_2,           labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1) CpB_nest <- lapply(pass_trees, function(x){   return(CpB(tree = x, n = 1000, asb = pass_asb, comp = \"nestedness\", ncor = 5)) }) CpB_val <- sapply(CpB_nest, function(x){return(x[,1])}) pB_val <- sapply(CpB_nest, function(x){return(x[,2])}) pBO_val <- sapply(CpB_nest, function(x){return(x[,3])}) # DF nest_100trees <- data.frame(CpB = apply(CpB_val, 1, mean),                             pB = apply(pB_val, 1, mean),                             pBO = apply(pBO_val, 1, mean)) nest_1 <- CpR_graph(data = nest_100trees, rate = \"CpB\", qtl = TRUE) nest_2 <- CpR_graph(data = nest_100trees, rate = \"CpB\", qtl = TRUE, map = AU_grid) # To plot them together ggarrange(nest_1, nest_2,           labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1)"},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Passerines Diversification","text":"Jetz, W., Thomas, G. H., Joy, J. B., Hartmann, K. Mooers, . O. 2012. global diversity birds space time. - Nature 491(7424): 444–448. https://doi.org/10.1038/nature11631 Rangel, T. F., Colwell, R. K., Graves, G. R., Fučíková, K., Rahbek, C. Diniz-Filho, J. . F. 2015. Phylogenetic uncertainty revisited: Implications ecological analyses. - Evolution 69(5): 1301–1312. https://doi.org/10.1111/evo.12644","code":""},{"path":"https://araujomat.github.io/treesliceR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matheus Lima Araujo. Author, maintainer. Luiz Gabriel Souza e Souza Ferreira. Author. Marco Tulio Pacheco Coelho. Author. Gabriel Nakamura. Author. Thiago Fernando Rangel. Author.","code":""},{"path":"https://araujomat.github.io/treesliceR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Araujo M, Ferreira L, Coelho M, Nakamura G, Rangel T (2023). treesliceR: Toolbox Slice Phylogenies Infer Phylogenetic Patterns Time. R package version 0.0.0.9000, https://araujotheus.github.io/treesliceR/, https://araujomat.github.io/treesliceR/, https://github.com/AraujoTheus/treesliceR.","code":"@Manual{,   title = {treesliceR: A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time},   author = {Matheus Lima Araujo and Luiz Gabriel Souza e Souza Ferreira and Marco Tulio Pacheco Coelho and Gabriel Nakamura and Thiago Fernando Rangel},   year = {2023},   note = {R package version 0.0.0.9000, https://araujotheus.github.io/treesliceR/, https://araujomat.github.io/treesliceR/},   url = {https://github.com/AraujoTheus/treesliceR}, }"},{"path":[]},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"biodiversity patterns currently observe Earth continuously shaped evolutionary dynamics longer periods time. Thus, historical dynamics experienced particular clade evolution crucial understand current patterns, many significant historical influences widely distributed imprinted across extant phylogenies. Alternatively, solely focusing macroevolution dynamics overlooks important complex patterns emerge due biogeographical processes. instance, dynamics may differ among assemblages due various constraints experienced time, resulting distinct phylogenetic histories stored within . However, dissecting phylogenies comprehend contributions cladogenesis events different depths given pattern challenging now, given lack tools readily providing type information. primary goal treesliceR provide wide range functions capable cutting phylogenies evolutionary depth (Figure 1). cutted phylogenies can used users explore various evolutionary patterns stored different temporal depths, well information derived pruned phylogenies. ensure accessible user-friendly processes obtaining pruned phylogenies, treesliceR functions offer multiple criteria making slices based users requirements. instance, enables users cut phylogenies different orientations, ‘rootwardly’ (root tips) ‘tipwardly’ (tips root), simply obtain phylogenetic slice within specific time interval interest. Alternatively, multiple phylogenetic slices equal width can produced, similar time-series, based user-input temporal criteria, can expressed either millions years terms phylogenetic diversity. Figure 1: figure provides illustrated examples functions slicing phylogenies available within treesliceR. red dashed lines indicate hypothetical temporal thresholds input user. second goal treesliceR provide functions facilitate assessment novel family rates accumulation time phylogenetic index (Figure 2). rationale behind rates currently available indexes differentiate contributions lineages different depths given observed pattern. implies value particular phylogenetic index can obtained different configurations species compositions tree topologies. instance, high phylogenetic diversity observed within assemblage result deep lineages high richness recent lineages. Therefore, treesliceR offers functions calculating accumulation given phylogenetic pattern (e.g., PD, PE, Pβ…) time elucidate main lineages depths responsible generating . detailed information regarding mathematical procedures behind rates, please refer Araujo et al. (review). Figure 2: figure provide illustrated examples available functions calculating rates accumulation phylogenetic indexes, assessing parsimonious number slices model rates (.e., sensitivity analysis), presenting graphical outputs. figure demonstrates functions obtaining rates accumulations phygeloenetic β-diversity (Cpβ) example, rates can also applied phylogenetic indexes (details, see treesliceR CRAN). treesliceR easy--use open-access R package continuously evolving, goal becoming standard toolbox users interested temporally dissecting phylogenetic information. strives continually develop innovative methods reveal previously concealed phylogenetic patterns evolutionary time. package developed following user-friendly software development practices, offering functions core parallelization, detailed error messages case failures, graphical functions can rapidly generate ready--publish figures. Nevertheless, treesliceR freely maintained GitHub, user community can directly engage maintainers report bugs, contribute improvements existing algorithms pull request, even propose novel ideas future functions.","code":""},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"interested using treesliceR tools classes research, can install CRAN (Comprehensive R Archive Network) version simply typing: Alternatively, can install development version treesliceR GitHub typing: Now, ready temporally dissect phylogenetic pattern interest!","code":"install.packages(\"treesliceR\") devtools::install_github(\"AraujoMat/treesliceR\")"},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"learn various ways use solve problems using treesliceR, can explore vignettes: Basic applications: section provides straightforward beginner-friendly applications simple illustrations tools available within package; Passerines distribution: , ’ll find applied example tools focusing Australian passeriformes, compare species richness distributions older recent lineages; Passerines diversification: vignette, replicate case study Araujo et al. (review). presents workflow executed single phylogeny multiple sampled phylogenies passeriformes.","code":""},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"Encountering issues certain treesliceR functions computer? Please report bugs minimal reproducible example package’s GitHub page. suggestions improving algorithms, don’t hesitate submit ideas pull requests. intriguing ideas exploring phylogenetic information temporally, please feel free contact us via email : matheusaraujolima@live.com. can track commit updates version controls directly GitHub, amusing experience, check .","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/AU_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Australia grid map — AU_grid","title":"Australia grid map — AU_grid","text":"gridded shapefile Australia, grid cells 0.5-degree resolution.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/AU_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Australia grid map — AU_grid","text":"","code":"AU_grid"},{"path":"https://araujomat.github.io/treesliceR/reference/AU_grid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australia grid map — AU_grid","text":"Shapefile","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpB","title":"Title — CpB","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpB","text":"","code":"CpB(   tree,   n,   asb,   comp = \"sorensen\",   method = \"multisite\",   criteria = \"my\",   pBO = 5,   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/CpB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpB","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB_RW.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpB_RW","title":"Title — CpB_RW","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB_RW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpB_RW","text":"","code":"CpB_RW(   tree,   n,   mat,   asb,   method = \"multisite\",   criteria = \"my\",   pBO = 5,   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/CpB_RW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpB_RW","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpD.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpD","title":"Title — CpD","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpD","text":"","code":"CpD(tree, n, mat, criteria = \"my\", pDO = 5, ncor = 0)"},{"path":"https://araujomat.github.io/treesliceR/reference/CpD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpD","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpE.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpE","title":"Title — CpE","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpE","text":"","code":"CpE(tree, n, mat, criteria = \"my\", pEO = 5, ncor = 0)"},{"path":"https://araujomat.github.io/treesliceR/reference/CpE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpE","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpR_graph","title":"Title — CpR_graph","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpR_graph","text":"","code":"CpR_graph(data, rate = NULL, map = NULL, pal = NULL, qtl = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpR_graph","text":"qtl","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpR_sensitivity","title":"Title — CpR_sensitivity","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpR_sensitivity","text":"","code":"CpR_sensitivity(   tree,   vec,   mat = NULL,   asb = NULL,   rate = NULL,   samp = 0,   comp = \"sorensen\",   method = \"multisite\",   criteria = \"my\",   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpR_sensitivity","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpR_sensitivity_plot","title":"Title — CpR_sensitivity_plot","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpR_sensitivity_plot","text":"","code":"CpR_sensitivity_plot(sst_output, rate = NULL, stc = \"mean\")"},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpR_sensitivity_plot","text":"stc","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/DR.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — DR","title":"Title — DR","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/DR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — DR","text":"","code":"DR(tree)"},{"path":"https://araujomat.github.io/treesliceR/reference/DR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — DR","text":"tree","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/nodes_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — nodes_config","title":"Title — nodes_config","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/nodes_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — nodes_config","text":"","code":"nodes_config(tree)"},{"path":"https://araujomat.github.io/treesliceR/reference/nodes_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — nodes_config","text":"tree","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_asb.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","title":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","text":"list presence-absence matrices passeriformes Australia. object within list represents passerine presence-absence matrix contaning assemblage focal cell respective neighborhood assemblages.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_asb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","text":"","code":"pass_asb"},{"path":"https://araujomat.github.io/treesliceR/reference/pass_asb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","text":"List","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence-absence matrix of Australian passeriformes — pass_mat","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"presence-absence matrix passeriformes obtained Australian grid-cells. column represents specific passeriforme species, row corresponds assemblage (grid cell) within Australian grid-map. passerine range maps sourced BirdLife platform.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"","code":"pass_mat"},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"Matrix","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"https://www.birdlife.org/","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic tree of passerines from Australia — pass_trees","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"list contaning 100 phylogenetic trees passerines Australia. object within list corresponds sampled phylogeny class \"phylo\". phylogenies subsets obtained global bird phylogeny (https://birdtree.org/) made available Jetz et al. (2012) published research, \"global diversity birds space time\".","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"","code":"pass_trees"},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"List phylogenetic trees format phylo","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"https://doi.org/10.1038/nature11631","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/phylo_pieces.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — phylo_pieces","title":"Title — phylo_pieces","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/phylo_pieces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — phylo_pieces","text":"","code":"phylo_pieces(   tree,   n,   criteria = \"my\",   method = 1,   timeSteps = FALSE,   dropNodes = FALSE,   returnTree = FALSE )"},{"path":"https://araujomat.github.io/treesliceR/reference/phylo_pieces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — phylo_pieces","text":"returnTree","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/prune_tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — prune_tips","title":"Title — prune_tips","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/prune_tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — prune_tips","text":"","code":"prune_tips(tree, time, qtl = FALSE, method = 1)"},{"path":"https://araujomat.github.io/treesliceR/reference/prune_tips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — prune_tips","text":"method","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/r_phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — r_phylo","title":"Title — r_phylo","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/r_phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — r_phylo","text":"","code":"r_phylo(   tree,   n,   mat,   asb,   index = NULL,   comp = \"sorensen\",   method = \"multisite\",   criteria = \"my\",   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/r_phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — r_phylo","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. foreach %%, %dopar%","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — squeeze_int","title":"Title — squeeze_int","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — squeeze_int","text":"","code":"squeeze_int(tree, from, to, invert = FALSE, criteria = \"my\", dropNodes = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — squeeze_int","text":"dropNodes","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — squeeze_root","title":"Title — squeeze_root","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — squeeze_root","text":"","code":"squeeze_root(tree, time, criteria = \"my\", dropNodes = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — squeeze_root","text":"dropNodes","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — squeeze_tips","title":"Title — squeeze_tips","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — squeeze_tips","text":"","code":"squeeze_tips(tree, time, criteria = \"my\", dropNodes = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_tips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — squeeze_tips","text":"dropNodes","code":""},{"path":"https://araujomat.github.io/treesliceR/news/index.html","id":"treeslicer-development-version","dir":"Changelog","previous_headings":"","what":"treesliceR (development version)","title":"treesliceR (development version)","text":"Initial CRAN submission.","code":""}]
