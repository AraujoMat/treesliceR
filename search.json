[{"path":"https://araujomat.github.io/treesliceR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 treesliceR authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"first-framework-example","dir":"Articles","previous_headings":"Case study using a single passeriformes tree","what":"First framework example","title":"Passeriformes diversification","text":"Herein, ’ll compare passeriformes Diversification Rates (DR) Australia aridification (~33 Mya). Primarily, need load passeriformes phylogeny available within package. passeriformes phylogeny obtained Jetz et al. (2012). Now, need split phylogeny two distinct portions, one representing last 33 millions years ago another cladogenesis events period. capture root slice 33 , can slice phylogeny tipwardly (.e., tips root) using squeeze_tips() function. Alternatively, tip slice last 33 can obtained squeeze_root() function, slice phylogeny rootwardly (.e, root tips). Since tip diversification rates (DR) calculation dependent node path given tip, used argument dropNodes = TRUE remove void nodes bias estimation. : can visualize outputted see algorithm worked  , need calculate tip diversification rates (DR) separately phylogeny slice, finding difference. calculate DR, can use function DR() available within treesliceR package: Now ’ll pair differences DR assigning difference data.frame contains passeriformes information inside tree object: calculate mean standard deviation difference per passeriformes family, use tapply() function aggregate tip-DR’s family: visualize differences DR among families, lets create dataframe contaning outputs: Now, can create graph similar manuscript using package ggplot2:  Pay attention final outputs sligly different obtained Araujo et al. (review) manuscript. However, contrast study, example executed single passeriformes phylogeny. complete assessment using phylogenies executed sections .","code":"tree <- pass_trees[[1]] recent <- squeeze_root(tree = tree, time = 33, dropNodes = T) old <- squeeze_tips(tree = tree, time = 33, dropNodes = T) par(mfrow = c(1, 3)) plot(tree, main = \"Complete tree\", show.tip.label = F); axisPhylo() plot(recent, main = \"Recent tree\", show.tip.label = F); axisPhylo() plot(old, main = \"Old tree\", show.tip.label = F); axisPhylo() par(mfrow = c(1, 1)) # Returning to a simple 1x1 viewer DR_diff <- DR(tree = recent)[,2] - DR(tree = old)[,2] tree$Species_info$DR_diff <- DR_diff fam_DR <- tapply(tree$Species_info$DR_diff, tree$Species_info$Family, mean) fam_DR_sd <- tapply(tree$Species_info$DR_diff, tree$Species_info$Family, sd) fam_df <- data.frame(Family = names(fam_DR), DR_diff = fam_DR, DR_sd = fam_DR_sd) # Sorting based on DR value to plot fam_df <- fam_df[order(fam_df$DR_diff),] fam_df$Family <- factor(fam_df$Family, levels = fam_df$Family) ggplot(fam_df, aes(x = Family, y = DR_diff,                     ymin = DR_diff - DR_sd,                     ymax = DR_diff + DR_sd)) +   geom_pointrange(color = \"#d90429\") +   geom_hline(yintercept = 0, linetype=\"dashed\", color = \"black\") +   coord_flip() + theme_minimal() +    theme(axis.title = element_text(size = 13),         axis.text = element_text(size = 10),         axis.line = element_line(colour = \"black\"),         panel.grid.major.x = element_blank(),         panel.grid.minor.x = element_blank()) +   ylab(expression(paste(DR[\"recent\"]-DR[\"past\"]))) + xlab(NULL) #> Warning: Removed 9 rows containing missing values (`geom_segment()`)."},{"path":"https://araujomat.github.io/treesliceR/articles/Passeriformes-diversification.html","id":"second-framework-example","dir":"Articles","previous_headings":"Case study using a single passeriformes tree","what":"Second framework example","title":"Passeriformes diversification","text":"Herein, ’ll use Australian passeriformes calculate CpB-rate turnover nestedness components. Firstly, ’ll need load paired assemblages respective neighborhoods run analysis stored intern object called pass_asb. object list presence-absences matrices, lists contain given Australian focal cell respective neighborhood cells. , let’s check header four first columns first matrix within list: can run sensitivity analysis find parsimonious number slices assess CpB rate patterns. first, ’ll need create vector number slices: Now can run sensitivity analysis visualize patterns. ’ll turnover order : Now can run sensitivity analysis visualize patterns. ’ll turnover order : , can plot sensitivity analysis components using CpR_sensitivity_plot funcion. use ggplot syntaxe add vertical line showing number slices set following analysis:  Calculating CpB-rate turnover nestedness components multisite approach (PS: can take minutes): Finally, can plot CpB time map . map , can use intern AU_grid object represents Australian grid map. Let’s first turnover component: can nestedness component:","code":"head(pass_asb[[1]][, 1:4]) #>    Myzomela_obscura Dicaeum_hirundinaceum Hirundo_nigricans Artamus_personatus #> 6                 1                     1                 1                  1 #> 5                 1                     1                 1                  1 #> 7                 1                     1                 1                  1 #> 16                1                     1                 1                  1 #> 17                1                     1                 1                  1 #> 18                1                     1                 1                  1 vec <- c(250, 500, 750, 1000, 1250, 1500, 1750, 2000) sens_turn <- CpR_sensitivity(tree = tree, vec = vec, samp = 100,                              asb = pass_asb, rate = \"CpB\", comp = \"turnover\") #> > The 250 number of pieces inputted equals to intervals of 0.2610503391684 million of years. #> > The 500 number of pieces inputted equals to intervals of 0.1305251695842 million of years. #> > The 750 number of pieces inputted equals to intervals of 0.0870167797228 million of years. #> > The 1000 number of pieces inputted equals to intervals of 0.0652625847921 million of years. #> > The 1250 number of pieces inputted equals to intervals of 0.05221006783368 million of years. #> > The 1500 number of pieces inputted equals to intervals of 0.0435083898614 million of years. #> > The 1750 number of pieces inputted equals to intervals of 0.0372929055954857 million of years. #> > The 2000 number of pieces inputted equals to intervals of 0.03263129239605 million of years. sens_turn <- CpR_sensitivity(tree = tree, vec = vec, samp = 100,                              asb = pass_asb, rate = \"CpB\", comp = \"turnover\") #> > The 250 number of pieces inputted equals to intervals of 0.2610503391684 million of years. #> > The 500 number of pieces inputted equals to intervals of 0.1305251695842 million of years. #> > The 750 number of pieces inputted equals to intervals of 0.0870167797228 million of years. #> > The 1000 number of pieces inputted equals to intervals of 0.0652625847921 million of years. #> > The 1250 number of pieces inputted equals to intervals of 0.05221006783368 million of years. #> > The 1500 number of pieces inputted equals to intervals of 0.0435083898614 million of years. #> > The 1750 number of pieces inputted equals to intervals of 0.0372929055954857 million of years. #> > The 2000 number of pieces inputted equals to intervals of 0.03263129239605 million of years. sens_nest <- CpR_sensitivity(tree = tree, vec = vec, samp = 100,                              asb = pass_asb, rate = \"CpB\", comp = \"nestedness\") #> > The 250 number of pieces inputted equals to intervals of 0.2610503391684 million of years. #> > The 500 number of pieces inputted equals to intervals of 0.1305251695842 million of years. #> > The 750 number of pieces inputted equals to intervals of 0.0870167797228 million of years. #> > The 1000 number of pieces inputted equals to intervals of 0.0652625847921 million of years. #> > The 1250 number of pieces inputted equals to intervals of 0.05221006783368 million of years. #> > The 1500 number of pieces inputted equals to intervals of 0.0435083898614 million of years. #> > The 1750 number of pieces inputted equals to intervals of 0.0372929055954857 million of years. #> > The 2000 number of pieces inputted equals to intervals of 0.03263129239605 million of years. # Store each graph within a respective object turn_sens_plot <- CpR_sensitivity_plot(sens_turn, rate = \"CpB\", stc = \"mean\") +    geom_vline(xintercept = 1000, linetype=\"dashed\", color = \"black\") nest_sens_plot <- CpR_sensitivity_plot(sens_nest, rate = \"CpB\", stc = \"mean\") +    geom_vline(xintercept = 1000, linetype=\"dashed\", color = \"black\") # To plot them together ggarrange(turn_sens_plot, nest_sens_plot,                     labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1) # For turnover component turn <- CpB(tree = tree, n = 1000, asb = pass_asb, comp = \"turnover\") #> > The 1000 number of pieces inputted equals to intervals of 0.0652625847921 million of years. # For nestedness component nest <- CpB(tree = tree, n = 1000, asb = pass_asb, comp = \"nestedness\") #> > The 1000 number of pieces inputted equals to intervals of 0.0652625847921 million of years. nest1 <- CpR_graph(data = nest, rate = \"CpB\", qtl = TRUE) nest2 <- CpR_graph(data = nest, rate = \"CpB\", qtl = TRUE, map = AU_grid) # To plot them together ggarrange(nest1, nest2,                     labels = c(\"a)\", \"b)\"), ncol = 2, nrow = 1)"},{"path":"https://araujomat.github.io/treesliceR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matheus Lima Araujo. Author, maintainer. Luiz Gabriel Souza e Souza Ferreira. Author. Marco Tulio Pacheco Coelho. Author. Gabriel Nakamura. Author. Thiago Fernando Rangel. Author.","code":""},{"path":"https://araujomat.github.io/treesliceR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Araujo M, Ferreira L, Coelho M, Nakamura G, Rangel T (2023). treesliceR: Toolbox Slice Phylogenies Infer Phylogenetic Patterns Time. R package version 0.0.0.9000, https://araujotheus.github.io/treesliceR/, https://araujomat.github.io/treesliceR/, https://github.com/AraujoTheus/treesliceR.","code":"@Manual{,   title = {treesliceR: A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time},   author = {Matheus Lima Araujo and Luiz Gabriel Souza e Souza Ferreira and Marco Tulio Pacheco Coelho and Gabriel Nakamura and Thiago Fernando Rangel},   year = {2023},   note = {R package version 0.0.0.9000, https://araujotheus.github.io/treesliceR/, https://araujomat.github.io/treesliceR/},   url = {https://github.com/AraujoTheus/treesliceR}, }"},{"path":[]},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"biodiversity patterns currently observe Earth continuously shaped evolutionary dynamics longer periods time. Thus, historical dynamics experienced particular clade evolution crucial understand current patterns, many significant historical influences widely distributed imprinted across extant phylogenies. Alternatively, solely focusing macroevolution dynamics overlooks important complex patterns emerge due biogeographical processes. instance, dynamics may differ among assemblages due various constraints experienced time, resulting distinct phylogenetic histories stored within . However, dissecting phylogenies comprehend contributions cladogenesis events different depths given pattern challenging now, given lack tools readily providing type information. primary goal treesliceR provide wide range functions capable cutting phylogenies evolutionary depth (Figure 1). cutted phylogenies can used users explore various evolutionary patterns stored different temporal depths, well information derived pruned phylogenies. ensure accessible user-friendly processes obtaining pruned phylogenies, treesliceR functions offer multiple criteria making slices based users requirements. instance, enables users cut phylogenies different orientations, ‘rootwardly’ (root tips) ‘tipwardly’ (tips root), simply obtain phylogenetic slice within specific time interval interest. Alternatively, multiple phylogenetic slices equal width can produced, similar time-series, based user-input temporal criteria, can expressed either millions years terms phylogenetic diversity. Figure 1: figure provides illustrated examples functions slicing phylogenies available within treesliceR. red dashed lines indicate hypothetical temporal thresholds input user. second goal treesliceR provide functions facilitate assessment novel family rates accumulation time phylogenetic index (Figure 2). rationale behind rates currently available indexes differentiate contributions lineages different depths given observed pattern. implies value particular phylogenetic index can obtained different configurations species compositions tree topologies. instance, high phylogenetic diversity observed within assemblage result deep lineages high richness recent lineages. Therefore, treesliceR offers functions calculating accumulation given phylogenetic pattern (e.g., PD, PE, Pβ…) time elucidate main lineages depths responsible generating . detailed information regarding mathematical procedures behind rates, please refer Araujo et al. (review). Figure 2: figure provide illustrated examples available functions calculating rates accumulation phylogenetic indexes, assessing parsimonious number slices model rates (.e., sensitivity analysis), presenting graphical outputs. figure demonstrates functions obtaining rates accumulations phygeloenetic β-diversity (Cpβ) example, rates can also applied phylogenetic indexes (details, see treesliceR CRAN). treesliceR easy--use open-access R package continuously evolving, goal becoming standard toolbox users interested temporally dissecting phylogenetic information. strives continually develop innovative methods reveal previously concealed phylogenetic patterns evolutionary time. package developed following user-friendly software development practices, offering functions core parallelization, detailed error messages case failures, graphical functions can rapidly generate ready--publish figures. Nevertheless, treesliceR freely maintained GitHub, user community can directly engage maintainers report bugs, contribute improvements existing algorithms pull request, even propose novel ideas future functions.","code":""},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"interested using treesliceR tools classes research, can install CRAN (Comprehensive R Archive Network) version simply typing: Alternatively, can install development version treesliceR GitHub typing: Now, ready temporally dissect phylogenetic pattern interest!","code":"install.packages(\"treesliceR\") devtools::install_github(\"AraujoMat/treesliceR\")"},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"learn various ways use solve problems using treesliceR, can explore vignettes: Basic applications: section provides straightforward beginner-friendly applications simple illustrations tools available within package; Prune tips: , ’ll find applied example tools focusing Australian passeriformes, compare species richness distributions older recent lineages; Passeriformes diversification: vignette, replicate case study Araujo et al. (review). presents workflow executed single phylogeny multiple sampled phylogenies passeriformes.","code":""},{"path":"https://araujomat.github.io/treesliceR/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting help","title":"A Toolbox to Slice Phylogenies and Infer Phylogenetic Patterns Over Time","text":"Encountering issues certain treesliceR functions computer? Please report bugs minimal reproducible example package’s GitHub page. suggestions improving algorithms, don’t hesitate submit ideas pull requests. intriguing ideas exploring phylogenetic information temporally, please feel free contact us via email : matheusaraujolima@live.com.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/AU_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Australia grid map — AU_grid","title":"Australia grid map — AU_grid","text":"gridded shapefile Australia, grid cells 0.5-degree resolution.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/AU_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Australia grid map — AU_grid","text":"","code":"AU_grid"},{"path":"https://araujomat.github.io/treesliceR/reference/AU_grid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Australia grid map — AU_grid","text":"Shapefile","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpB","title":"Title — CpB","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpB","text":"","code":"CpB(   tree,   n,   asb,   comp = \"sorensen\",   method = \"multisite\",   criteria = \"my\",   pBO = 5,   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/CpB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpB","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB_RW.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpB_RW","title":"Title — CpB_RW","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpB_RW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpB_RW","text":"","code":"CpB_RW(   tree,   n,   mat,   asb,   method = \"multisite\",   criteria = \"my\",   pBO = 5,   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/CpB_RW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpB_RW","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpD.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpD","title":"Title — CpD","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpD","text":"","code":"CpD(tree, n, mat, criteria = \"my\", pDO = 5, ncor = 0)"},{"path":"https://araujomat.github.io/treesliceR/reference/CpD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpD","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpE.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpE","title":"Title — CpE","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpE","text":"","code":"CpE(tree, n, mat, criteria = \"my\", pEO = 5, ncor = 0)"},{"path":"https://araujomat.github.io/treesliceR/reference/CpE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpE","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpR_graph","title":"Title — CpR_graph","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpR_graph","text":"","code":"CpR_graph(data, rate = NULL, map = NULL, pal = NULL, qtl = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpR_graph","text":"qtl","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpR_sensitivity","title":"Title — CpR_sensitivity","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpR_sensitivity","text":"","code":"CpR_sensitivity(   tree,   vec,   mat = NULL,   asb = NULL,   rate = NULL,   samp = 0,   comp = \"sorensen\",   method = \"multisite\",   criteria = \"my\",   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpR_sensitivity","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — CpR_sensitivity_plot","title":"Title — CpR_sensitivity_plot","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — CpR_sensitivity_plot","text":"","code":"CpR_sensitivity_plot(sst_output, rate = NULL, stc = \"mean\")"},{"path":"https://araujomat.github.io/treesliceR/reference/CpR_sensitivity_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — CpR_sensitivity_plot","text":"stc","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/DR.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — DR","title":"Title — DR","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/DR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — DR","text":"","code":"DR(tree)"},{"path":"https://araujomat.github.io/treesliceR/reference/DR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — DR","text":"tree","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/nodes_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — nodes_config","title":"Title — nodes_config","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/nodes_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — nodes_config","text":"","code":"nodes_config(tree)"},{"path":"https://araujomat.github.io/treesliceR/reference/nodes_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — nodes_config","text":"tree","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_asb.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","title":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","text":"list presence-absence matrices passeriformes Australia. object within list represents passerine presence-absence matrix contaning assemblage focal cell respective neighborhood assemblages.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_asb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","text":"","code":"pass_asb"},{"path":"https://araujomat.github.io/treesliceR/reference/pass_asb.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Presence-absence matrices for focal and adjacent assemblages — pass_asb","text":"List","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Presence-absence matrix of Australian passeriformes — pass_mat","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"presence-absence matrix passeriformes obtained Australian grid-cells. column represents specific passeriforme species, row corresponds assemblage (grid cell) within Australian grid-map. passerine range maps sourced BirdLife platform.","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"","code":"pass_mat"},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"Matrix","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_mat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Presence-absence matrix of Australian passeriformes — pass_mat","text":"https://www.birdlife.org/","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Phylogenetic tree of passerines from Australia — pass_trees","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"list contaning 100 phylogenetic trees passerines Australia. object within list corresponds sampled phylogeny class \"phylo\". phylogenies subsets obtained global bird phylogeny (https://birdtree.org/) made available Jetz et al. (2012) published research, \"global diversity birds space time\".","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"","code":"pass_trees"},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"List phylogenetic trees format phylo","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/pass_trees.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Phylogenetic tree of passerines from Australia — pass_trees","text":"https://doi.org/10.1038/nature11631","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/phylo_pieces.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — phylo_pieces","title":"Title — phylo_pieces","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/phylo_pieces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — phylo_pieces","text":"","code":"phylo_pieces(   tree,   n,   criteria = \"my\",   method = 1,   timeSteps = FALSE,   dropNodes = FALSE,   returnTree = FALSE )"},{"path":"https://araujomat.github.io/treesliceR/reference/phylo_pieces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — phylo_pieces","text":"returnTree","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/r_phylo.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — r_phylo","title":"Title — r_phylo","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/r_phylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — r_phylo","text":"","code":"r_phylo(   tree,   n,   mat,   asb,   index = NULL,   comp = \"sorensen\",   method = \"multisite\",   criteria = \"my\",   ncor = 0 )"},{"path":"https://araujomat.github.io/treesliceR/reference/r_phylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — r_phylo","text":"ncor","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. foreach %%, %dopar%","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — squeeze_int","title":"Title — squeeze_int","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — squeeze_int","text":"","code":"squeeze_int(tree, from, to, invert = FALSE, criteria = \"my\", dropNodes = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — squeeze_int","text":"dropNodes","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_root.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — squeeze_root","title":"Title — squeeze_root","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_root.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — squeeze_root","text":"","code":"squeeze_root(tree, time, criteria = \"my\", dropNodes = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_root.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — squeeze_root","text":"dropNodes","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_tips.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — squeeze_tips","title":"Title — squeeze_tips","text":"Title","code":""},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_tips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — squeeze_tips","text":"","code":"squeeze_tips(tree, time, criteria = \"my\", dropNodes = FALSE)"},{"path":"https://araujomat.github.io/treesliceR/reference/squeeze_tips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — squeeze_tips","text":"dropNodes","code":""},{"path":"https://araujomat.github.io/treesliceR/news/index.html","id":"treeslicer-development-version","dir":"Changelog","previous_headings":"","what":"treesliceR (development version)","title":"treesliceR (development version)","text":"Initial CRAN submission.","code":""}]
